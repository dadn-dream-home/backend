syntax = "proto3";

option go_package = "github.com/dadn-dream-home/x/protobuf";

package protobuf;

service BackendService {
  rpc StreamSensorValues(StreamSensorValuesRequest)
      returns (stream StreamSensorValuesResponse);

  rpc StreamActuatorStates(StreamActuatorStatesRequest)
      returns (stream StreamActuatorStatesResponse);

  rpc StreamFeedsChanges(StreamFeedsChangesRequest)
      returns (stream StreamFeedsChangesResponse);

  rpc CreateFeed(CreateFeedRequest) returns (CreateFeedResponse);

  rpc DeleteFeed(DeleteFeedRequest) returns (DeleteFeedResponse);

  rpc SetActuatorState(SetActuatorStateRequest)
      returns (SetActuatorStateResponse);
}

message StreamSensorValuesRequest { string id = 1; }

message StreamSensorValuesResponse { float value = 1; }

message StreamActuatorStatesRequest { string id = 1; }

message StreamActuatorStatesResponse { bool state = 1; }

message StreamFeedsChangesRequest {}

message StreamFeedsChangesResponse { FeedsChange change = 1; }

message CreateFeedRequest { Feed feed = 1; }

message CreateFeedResponse {}

message DeleteFeedRequest { string id = 1; }

message DeleteFeedResponse {}

message SetActuatorStateRequest {
  Feed feed = 1;
  bool state = 2;
}

message SetActuatorStateResponse {}

// data types

enum FeedType {
  TEMPERATURE = 0;
  HUMIDITY = 1;
  LIGHT = 2;
}

message Feed {
  string id = 1;
  string description = 2;
  FeedType type = 3;
}

message FeedsChange {
  repeated Feed added = 1;
  repeated string removed = 2;
}

message Config {
  Feed feedConfig = 1;
  oneof typeConfig {
    SensorConfig sensorConfig = 2;
    ActuatorConfig actuatorConfig = 3;
  }
}

message SensorConfig {
  bool hasNotification = 1;
  float lowerThreshold = 2;
  float upperThreshold = 3;
}

message ActuatorConfig {
  bool automatic = 1;
  string turnOnCronExpr = 2;
  string turnOffCronExpr = 3;
}
